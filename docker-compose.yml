version: "3"
services: 
    psql:
        image: timescale/timescaledb:2.8.0-pg13
        container_name: coin-psql
        command: ["postgres", "-c", "logging_collector=on", "-c", "log_directory=/var/lib/postgresql/logs", "-c", "log_filename=postgresql_%Y-%m-%dT%H:%M:%S.log", "-c", "log_statement=all"]
        env_file:
          - .env
        volumes:
          - ./local_data/_postgresql/data:/var/lib/postgresql/data # persist db
          - ./local_data/_postgresql/logs:/var/lib/postgresql/logs # persist db
          - ./scripts/database/init:/docker-entrypoint-initdb.d # init script
        ports:
          - 5432:5432
    redis:
        image: redis:7.0.5
        container_name: coin-redis
        # We use the shell form of command here to run the container using shell
        # and thus make use of the password set in the .env file
        # - Double dollars, so that the variable is not expanded by Docker Compose,
        #   but by the shell
        # - Surround by quotes, so that the shell does not split the password
        # - The ${variable:?message} syntax causes shell to exit with a non-zero
        #   code and print a message, when the variable is not set or empty
        command: /bin/sh -c redis-server --appendonly yes --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
        env_file:
          - .env
        volumes:
          - ./local_data/_redis:/data # persist db
        ports:
          - 6379:6379
    coin_app:
        build: .
        container_name: coin-app
        tty: true
        env_file:
          - .env
        depends_on: 
          - psql
          - redis
        volumes:
          - ./logs:/coin-for-rich/logs
        ports:
          - 8000:8000 # web
          - 5566:5566 # celery flower
        entrypoint: sh -c '/coin-for-rich/wait-for coin-psql:5432 -t 60 && /coin-for-rich/wait-for coin-redis:6379 -t 60 && /coin-for-rich/scripts/docker/init.sh && bash'
